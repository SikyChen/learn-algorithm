
/**
 * 运算符 ^ : 异或运算符
 * 相同为0，不同为1
 * 1 ^ 1 === 0
 * 1 ^ 0 === 1
 * 0 ^ 1 === 1
 * 1 ^ 1 === 0
 * 
 * 
 * 特性1：
 * a ^ a === 0
 * 原因：
 * 如二进制 a ^ a
 *   1 0 0 1 1 1 0 0 
 * ^ 1 0 0 1 1 1 0 0 
 * ------------------
 *   0 0 0 0 0 0 0 0
 * 结果为0
 * 可以理解为不进位的相加，1+1=10，但不进位则1^1=0
 * 
 * 
 * 特性2:
 * a ^ 0 === a
 * 原因：
 * 如二进制 a ^ 0
 *   1 0 0 1 1 1 0 0 
 * ^ 0 0 0 0 0 0 0 0 
 * ------------------
 *   1 0 0 1 1 1 0 0
 * 结果跟a相同
 * 
 * 
 * 特性3：
 * a ^ 1 === 取反的a
 * 1异或任何数，等于给数各位取反
 * 原因：
 * 如二进制 a ^ 0
 *   1 0 0 1 1 1 0 0 
 * ^ 1 1 1 1 1 1 1 1 
 * ------------------
 *   0 1 1 0 0 0 1 1
 * 结果跟a相同
 * 
 * 
 * 特性4：
 * a ^ b ^ c === a ^ c ^ b ;
 * 可以调换顺序
 * 
 */

/**
 * 交换位置，使用位运算方法
 */
function swap(array, i, j) {      // 假如 array[i] === a ; array [j] === b ;
  array[i] = array[i] ^ array[j]; // array[i] == a ^ b
  array[j] = array[i] ^ array[j]; // array[j] == a ^ b ^ b == a ^ 0 == a
  array[i] = array[i] ^ array[j]; // array[i] == a ^ b ^ a == a ^ a ^ b == 0 ^ b == b
                                  // 结果 array[i] == b ; array[j] == a ; 两数已交换位置
}

// 测试
const arr = [1, 2, 3, 4]
console.log(arr);

swap(arr, 1, 2);
console.log(arr);